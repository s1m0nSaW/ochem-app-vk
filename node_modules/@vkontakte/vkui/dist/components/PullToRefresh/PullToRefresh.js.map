{"version":3,"sources":["../../../src/components/PullToRefresh/PullToRefresh.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { DOMProps, useDOM } from '../../lib/dom';\nimport { coordY, VKUITouchEvent } from '../../lib/touch';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { AnyFunction, HasChildren } from '../../types';\nimport { ScrollContextInterface, useScroll } from '../AppRoot/ScrollContext';\nimport { FixedLayout } from '../FixedLayout/FixedLayout';\nimport { Touch, TouchEvent, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { PullToRefreshSpinner } from './PullToRefreshSpinner';\nimport styles from './PullToRefresh.module.css';\n\nfunction cancelEvent(event: any) {\n  if (!event) {\n    return false;\n  }\n  while (event.originalEvent) {\n    event = event.originalEvent;\n  }\n  if (event.preventDefault && event.cancelable) {\n    event.preventDefault();\n  }\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  }\n  return false;\n}\n\nexport interface PullToRefreshProps extends DOMProps, TouchProps, HasChildren {\n  /**\n   * Будет вызвана для обновления контента (прим.: функция должна быть мемоизированным коллбэком)\n   */\n  onRefresh: AnyFunction;\n  /**\n   * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n   */\n  isFetching?: boolean;\n  /** @ignore */\n  scroll?: ScrollContextInterface;\n}\n\nconst TOUCH_MOVE_EVENT_PARAMS = {\n  cancelable: true,\n  passive: false,\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PullToRefresh\n */\nexport const PullToRefresh = ({\n  children,\n  isFetching,\n  onRefresh,\n  className,\n  ...restProps\n}: PullToRefreshProps) => {\n  const platform = usePlatform();\n  const scroll = useScroll();\n  const { document } = useDOM();\n  const prevIsFetching = usePrevious(isFetching);\n\n  const initParams = React.useMemo(\n    () => ({\n      start: platform === 'ios' ? -10 : -45,\n      max: platform === 'ios' ? 50 : 80,\n      maxY: platform === 'ios' ? 400 : 80,\n      refreshing: platform === 'ios' ? 36 : 50,\n      positionMultiplier: platform === 'ios' ? 0.21 : 1,\n    }),\n    [platform],\n  );\n\n  const [spinnerY, setSpinnerY] = React.useState(initParams.start);\n  const [watching, setWatching] = React.useState(false);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const [canRefresh, setCanRefresh] = React.useState(false);\n  const [touchDown, setTouchDown] = React.useState(false);\n  const prevTouchDown = usePrevious(touchDown);\n\n  const touchY = React.useRef(0);\n  const [contentShift, setContentShift] = React.useState(0);\n  const [spinnerProgress, setSpinnerProgress] = React.useState(0);\n\n  const resetRefreshingState = React.useCallback(() => {\n    setWatching(false);\n    setCanRefresh(false);\n    setRefreshing(false);\n    setSpinnerY(initParams.start);\n    setSpinnerProgress(0);\n    setContentShift(0);\n  }, [initParams]);\n\n  const onRefreshingFinish = React.useCallback(() => {\n    if (!touchDown) {\n      resetRefreshingState();\n    }\n  }, [touchDown, resetRefreshingState]);\n\n  const { set: setWaitFetchingTimeout, clear: clearWaitFetchingTimeout } = useTimeout(\n    onRefreshingFinish,\n    1000,\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && prevIsFetching && !isFetching) {\n      onRefreshingFinish();\n    }\n  }, [prevIsFetching, isFetching, onRefreshingFinish]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && !prevIsFetching && isFetching) {\n      clearWaitFetchingTimeout();\n    }\n  }, [isFetching, prevIsFetching, clearWaitFetchingTimeout]);\n\n  const runRefreshing = React.useCallback(() => {\n    if (!refreshing && onRefresh) {\n      // cleanup if the consumer does not start fetching in 1s\n      setWaitFetchingTimeout();\n\n      setRefreshing(true);\n      setSpinnerY((prevSpinnerY) => (platform === 'ios' ? prevSpinnerY : initParams.refreshing));\n\n      onRefresh();\n    }\n  }, [refreshing, onRefresh, setWaitFetchingTimeout, platform, initParams.refreshing]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevTouchDown !== undefined && prevTouchDown && !touchDown) {\n      if (!refreshing && canRefresh) {\n        runRefreshing();\n      } else if (refreshing && !isFetching) {\n        // only iOS can start refresh before gesture end\n        resetRefreshingState();\n      } else {\n        // refreshing && isFetching: refresh in progress\n        // OR !refreshing && !canRefresh: pull was not strong enough\n        setSpinnerY(refreshing ? initParams.refreshing : initParams.start);\n        setSpinnerProgress(0);\n        setContentShift(0);\n      }\n    }\n  }, [\n    initParams,\n    prevIsFetching,\n    isFetching,\n    onRefreshingFinish,\n    prevTouchDown,\n    touchDown,\n    refreshing,\n    canRefresh,\n    runRefreshing,\n  ]);\n\n  const startYRef = React.useRef(0);\n\n  const onTouchStart = (e: TouchEvent) => {\n    if (refreshing) {\n      cancelEvent(e);\n    }\n    setTouchDown(true);\n    startYRef.current = e.startY;\n\n    if (document) {\n      // eslint-disable-next-line no-restricted-properties\n      document.documentElement.classList.add('vkui--disable-overscroll-behavior');\n    }\n  };\n\n  const shouldPreventTouchMove = (event: VKUITouchEvent) => {\n    if (watching || refreshing) {\n      return true;\n    }\n\n    /* Нам нужно запретить touchmove у документа как только стало понятно, что\n     * начинается pull.\n     * состояния watching и refreshing устанавливаются слишком поздно и браузер\n     * может успеть начать нативный pull to refresh.\n     *\n     * Этот код является запасным вариантом, на случай, если css свойство\n     * overscroll-behavior не поддерживается\n     * */\n    const shiftY = coordY(event) - startYRef.current;\n    const pageYOffset = scroll?.getScroll().y;\n    const isRefreshGestureStarted = pageYOffset === 0 && shiftY > 0 && touchDown;\n    return isRefreshGestureStarted;\n  };\n\n  const onWindowTouchMove = (event: VKUITouchEvent) => {\n    if (shouldPreventTouchMove(event)) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  useGlobalEventListener(document, 'touchmove', onWindowTouchMove, TOUCH_MOVE_EVENT_PARAMS);\n\n  const onTouchMove = (e: TouchEvent) => {\n    const { isY, shiftY } = e;\n    const { start, max } = initParams;\n    const pageYOffset = scroll?.getScroll().y;\n\n    if (watching && touchDown) {\n      cancelEvent(e);\n\n      const { positionMultiplier, maxY } = initParams;\n\n      const shift = Math.max(0, shiftY - touchY.current);\n\n      const currentY = clamp(start + shift * positionMultiplier, start, maxY);\n      const progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      setSpinnerY(currentY);\n      setSpinnerProgress(clamp(progress, 0, 80));\n      setCanRefresh(progress > 80);\n      setContentShift((currentY + 10) * 2.3);\n\n      if (progress > 85 && !refreshing && platform === 'ios') {\n        runRefreshing();\n      }\n    } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {\n      cancelEvent(e);\n\n      touchY.current = shiftY;\n      setWatching(true);\n      setSpinnerY(start);\n      setSpinnerProgress(0);\n    }\n  };\n\n  const onTouchEnd = () => {\n    setWatching(false);\n    setTouchDown(false);\n\n    // восстанавливаем overscroll behavior\n    if (document) {\n      // eslint-disable-next-line no-restricted-properties\n      document.documentElement.classList.remove('vkui--disable-overscroll-behavior');\n    }\n  };\n\n  const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n  let contentTransform = '';\n\n  if (platform === 'ios' && refreshing && !touchDown) {\n    contentTransform = 'translate3d(0, 100px, 0)';\n  } else if (platform === 'ios' && (contentShift || refreshing)) {\n    contentTransform = `translate3d(0, ${contentShift}px, 0)`;\n  }\n\n  return (\n    <TouchRootContext.Provider value={true}>\n      <Touch\n        aria-live=\"polite\"\n        aria-busy={!!isFetching}\n        {...restProps}\n        onStart={onTouchStart}\n        onMove={onTouchMove}\n        onEnd={onTouchEnd}\n        className={classNames(\n          styles['PullToRefresh'],\n          platform === 'ios' && styles['PullToRefresh--ios'],\n          watching && styles['PullToRefresh--watching'],\n          refreshing && styles['PullToRefresh--refreshing'],\n          className,\n        )}\n      >\n        <FixedLayout className={styles['PullToRefresh__controls']} useParentWidth>\n          <PullToRefreshSpinner\n            style={{\n              transform: spinnerTransform,\n              WebkitTransform: spinnerTransform,\n              opacity: watching || refreshing || canRefresh ? 1 : 0,\n            }}\n            on={refreshing}\n            progress={refreshing ? undefined : spinnerProgress}\n          />\n        </FixedLayout>\n\n        <div\n          className={styles['PullToRefresh__content']}\n          style={{\n            transform: contentTransform,\n            WebkitTransform: contentTransform,\n          }}\n        >\n          {children}\n        </div>\n      </Touch>\n    </TouchRootContext.Provider>\n  );\n};\n"],"names":["React","classNames","clamp","useGlobalEventListener","usePlatform","usePrevious","useTimeout","useDOM","coordY","useIsomorphicLayoutEffect","useScroll","FixedLayout","Touch","TouchRootContext","PullToRefreshSpinner","cancelEvent","event","originalEvent","preventDefault","cancelable","stopPropagation","TOUCH_MOVE_EVENT_PARAMS","passive","PullToRefresh","children","isFetching","onRefresh","className","restProps","platform","scroll","document","prevIsFetching","initParams","useMemo","start","max","maxY","refreshing","positionMultiplier","spinnerY","setSpinnerY","useState","watching","setWatching","setRefreshing","canRefresh","setCanRefresh","touchDown","setTouchDown","prevTouchDown","touchY","useRef","contentShift","setContentShift","spinnerProgress","setSpinnerProgress","resetRefreshingState","useCallback","onRefreshingFinish","set","setWaitFetchingTimeout","clear","clearWaitFetchingTimeout","undefined","runRefreshing","prevSpinnerY","startYRef","onTouchStart","e","current","startY","documentElement","classList","add","shouldPreventTouchMove","shiftY","pageYOffset","getScroll","y","isRefreshGestureStarted","onWindowTouchMove","onTouchMove","isY","shift","Math","currentY","progress","abs","onTouchEnd","remove","spinnerTransform","contentTransform","Provider","value","aria-live","aria-busy","onStart","onMove","onEnd","useParentWidth","style","transform","WebkitTransform","opacity","on","div"],"mappings":";;;AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,sBAAsB,QAAQ,qCAAqC;AAC5E,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAAmBC,MAAM,QAAQ,gBAAgB;AACjD,SAASC,MAAM,QAAwB,kBAAkB;AACzD,SAASC,yBAAyB,QAAQ,sCAAsC;AAEhF,SAAiCC,SAAS,QAAQ,2BAA2B;AAC7E,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,KAAK,QAAgC,iBAAiB;AAC/D,OAAOC,sBAAsB,wBAAwB;AACrD,SAASC,oBAAoB,QAAQ,yBAAyB;AAG9D,SAASC,YAAYC,KAAU;IAC7B,IAAI,CAACA,OAAO;QACV,OAAO;IACT;IACA,MAAOA,MAAMC,aAAa,CAAE;QAC1BD,QAAQA,MAAMC,aAAa;IAC7B;IACA,IAAID,MAAME,cAAc,IAAIF,MAAMG,UAAU,EAAE;QAC5CH,MAAME,cAAc;IACtB;IACA,IAAIF,MAAMI,eAAe,EAAE;QACzBJ,MAAMI,eAAe;IACvB;IACA,OAAO;AACT;AAeA,MAAMC,0BAA0B;IAC9BF,YAAY;IACZG,SAAS;AACX;AAEA;;CAEC,GACD,OAAO,MAAMC,gBAAgB;QAAC,EAC5BC,QAAQ,EACRC,UAAU,EACVC,SAAS,EACTC,SAAS,EAEU,WADhBC;QAJHJ;QACAC;QACAC;QACAC;;IAGA,MAAME,WAAWzB;IACjB,MAAM0B,SAASpB;IACf,MAAM,EAAEqB,QAAQ,EAAE,GAAGxB;IACrB,MAAMyB,iBAAiB3B,YAAYoB;IAEnC,MAAMQ,aAAajC,MAAMkC,OAAO,CAC9B,IAAO,CAAA;YACLC,OAAON,aAAa,QAAQ,CAAC,KAAK,CAAC;YACnCO,KAAKP,aAAa,QAAQ,KAAK;YAC/BQ,MAAMR,aAAa,QAAQ,MAAM;YACjCS,YAAYT,aAAa,QAAQ,KAAK;YACtCU,oBAAoBV,aAAa,QAAQ,OAAO;QAClD,CAAA,GACA;QAACA;KAAS;IAGZ,MAAM,CAACW,UAAUC,YAAY,GAAGzC,MAAM0C,QAAQ,CAACT,WAAWE,KAAK;IAC/D,MAAM,CAACQ,UAAUC,YAAY,GAAG5C,MAAM0C,QAAQ,CAAC;IAC/C,MAAM,CAACJ,YAAYO,cAAc,GAAG7C,MAAM0C,QAAQ,CAAC;IACnD,MAAM,CAACI,YAAYC,cAAc,GAAG/C,MAAM0C,QAAQ,CAAC;IACnD,MAAM,CAACM,WAAWC,aAAa,GAAGjD,MAAM0C,QAAQ,CAAC;IACjD,MAAMQ,gBAAgB7C,YAAY2C;IAElC,MAAMG,SAASnD,MAAMoD,MAAM,CAAC;IAC5B,MAAM,CAACC,cAAcC,gBAAgB,GAAGtD,MAAM0C,QAAQ,CAAC;IACvD,MAAM,CAACa,iBAAiBC,mBAAmB,GAAGxD,MAAM0C,QAAQ,CAAC;IAE7D,MAAMe,uBAAuBzD,MAAM0D,WAAW,CAAC;QAC7Cd,YAAY;QACZG,cAAc;QACdF,cAAc;QACdJ,YAAYR,WAAWE,KAAK;QAC5BqB,mBAAmB;QACnBF,gBAAgB;IAClB,GAAG;QAACrB;KAAW;IAEf,MAAM0B,qBAAqB3D,MAAM0D,WAAW,CAAC;QAC3C,IAAI,CAACV,WAAW;YACdS;QACF;IACF,GAAG;QAACT;QAAWS;KAAqB;IAEpC,MAAM,EAAEG,KAAKC,sBAAsB,EAAEC,OAAOC,wBAAwB,EAAE,GAAGzD,WACvEqD,oBACA;IAGFlD,0BAA0B;QACxB,IAAIuB,mBAAmBgC,aAAahC,kBAAkB,CAACP,YAAY;YACjEkC;QACF;IACF,GAAG;QAAC3B;QAAgBP;QAAYkC;KAAmB;IAEnDlD,0BAA0B;QACxB,IAAIuB,mBAAmBgC,aAAa,CAAChC,kBAAkBP,YAAY;YACjEsC;QACF;IACF,GAAG;QAACtC;QAAYO;QAAgB+B;KAAyB;IAEzD,MAAME,gBAAgBjE,MAAM0D,WAAW,CAAC;QACtC,IAAI,CAACpB,cAAcZ,WAAW;YAC5B,wDAAwD;YACxDmC;YAEAhB,cAAc;YACdJ,YAAY,CAACyB,eAAkBrC,aAAa,QAAQqC,eAAejC,WAAWK,UAAU;YAExFZ;QACF;IACF,GAAG;QAACY;QAAYZ;QAAWmC;QAAwBhC;QAAUI,WAAWK,UAAU;KAAC;IAEnF7B,0BAA0B;QACxB,IAAIyC,kBAAkBc,aAAad,iBAAiB,CAACF,WAAW;YAC9D,IAAI,CAACV,cAAcQ,YAAY;gBAC7BmB;YACF,OAAO,IAAI3B,cAAc,CAACb,YAAY;gBACpC,gDAAgD;gBAChDgC;YACF,OAAO;gBACL,gDAAgD;gBAChD,4DAA4D;gBAC5DhB,YAAYH,aAAaL,WAAWK,UAAU,GAAGL,WAAWE,KAAK;gBACjEqB,mBAAmB;gBACnBF,gBAAgB;YAClB;QACF;IACF,GAAG;QACDrB;QACAD;QACAP;QACAkC;QACAT;QACAF;QACAV;QACAQ;QACAmB;KACD;IAED,MAAME,YAAYnE,MAAMoD,MAAM,CAAC;IAE/B,MAAMgB,eAAe,CAACC;QACpB,IAAI/B,YAAY;YACdvB,YAAYsD;QACd;QACApB,aAAa;QACbkB,UAAUG,OAAO,GAAGD,EAAEE,MAAM;QAE5B,IAAIxC,UAAU;YACZ,oDAAoD;YACpDA,SAASyC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC;QACzC;IACF;IAEA,MAAMC,yBAAyB,CAAC3D;QAC9B,IAAI2B,YAAYL,YAAY;YAC1B,OAAO;QACT;QAEA;;;;;;;OAOG,GACH,MAAMsC,SAASpE,OAAOQ,SAASmD,UAAUG,OAAO;QAChD,MAAMO,cAAc/C,mBAAAA,6BAAAA,OAAQgD,SAAS,GAAGC,CAAC;QACzC,MAAMC,0BAA0BH,gBAAgB,KAAKD,SAAS,KAAK5B;QACnE,OAAOgC;IACT;IAEA,MAAMC,oBAAoB,CAACjE;QACzB,IAAI2D,uBAAuB3D,QAAQ;YACjCA,MAAME,cAAc;YACpBF,MAAMI,eAAe;QACvB;IACF;IAEAjB,uBAAuB4B,UAAU,aAAakD,mBAAmB5D;IAEjE,MAAM6D,cAAc,CAACb;QACnB,MAAM,EAAEc,GAAG,EAAEP,MAAM,EAAE,GAAGP;QACxB,MAAM,EAAElC,KAAK,EAAEC,GAAG,EAAE,GAAGH;QACvB,MAAM4C,cAAc/C,mBAAAA,6BAAAA,OAAQgD,SAAS,GAAGC,CAAC;QAEzC,IAAIpC,YAAYK,WAAW;YACzBjC,YAAYsD;YAEZ,MAAM,EAAE9B,kBAAkB,EAAEF,IAAI,EAAE,GAAGJ;YAErC,MAAMmD,QAAQC,KAAKjD,GAAG,CAAC,GAAGwC,SAASzB,OAAOmB,OAAO;YAEjD,MAAMgB,WAAWpF,MAAMiC,QAAQiD,QAAQ7C,oBAAoBJ,OAAOE;YAClE,MAAMkD,WAAWD,WAAW,CAAC,KAAKD,KAAKG,GAAG,CAAC,AAACF,CAAAA,WAAW,EAAC,IAAKlD,OAAO,KAAK;YAEzEK,YAAY6C;YACZ9B,mBAAmBtD,MAAMqF,UAAU,GAAG;YACtCxC,cAAcwC,WAAW;YACzBjC,gBAAgB,AAACgC,CAAAA,WAAW,EAAC,IAAK;YAElC,IAAIC,WAAW,MAAM,CAACjD,cAAcT,aAAa,OAAO;gBACtDoC;YACF;QACF,OAAO,IAAIkB,OAAON,gBAAgB,KAAKD,SAAS,KAAK,CAACtC,cAAcU,WAAW;YAC7EjC,YAAYsD;YAEZlB,OAAOmB,OAAO,GAAGM;YACjBhC,YAAY;YACZH,YAAYN;YACZqB,mBAAmB;QACrB;IACF;IAEA,MAAMiC,aAAa;QACjB7C,YAAY;QACZK,aAAa;QAEb,sCAAsC;QACtC,IAAIlB,UAAU;YACZ,oDAAoD;YACpDA,SAASyC,eAAe,CAACC,SAAS,CAACiB,MAAM,CAAC;QAC5C;IACF;IAEA,MAAMC,mBAAmB,CAAC,eAAe,EAAEnD,SAAS,MAAM,CAAC;IAC3D,IAAIoD,mBAAmB;IAEvB,IAAI/D,aAAa,SAASS,cAAc,CAACU,WAAW;QAClD4C,mBAAmB;IACrB,OAAO,IAAI/D,aAAa,SAAUwB,CAAAA,gBAAgBf,UAAS,GAAI;QAC7DsD,mBAAmB,CAAC,eAAe,EAAEvC,aAAa,MAAM,CAAC;IAC3D;IAEA,qBACE,oBAACxC,iBAAiBgF,QAAQ;QAACC,OAAO;qBAChC,oBAAClF;QACCmF,aAAU;QACVC,aAAW,CAAC,CAACvE;OACTG;QACJqE,SAAS7B;QACT8B,QAAQhB;QACRiB,OAAOV;QACP9D,WAAW1B,gCAET4B,aAAa,mCACbc,2CACAL,+CACAX;sBAGF,oBAAChB;QAAYgB,SAAS;QAAqCyE,gBAAAA;qBACzD,oBAACtF;QACCuF,OAAO;YACLC,WAAWX;YACXY,iBAAiBZ;YACjBa,SAAS7D,YAAYL,cAAcQ,aAAa,IAAI;QACtD;QACA2D,IAAInE;QACJiD,UAAUjD,aAAa0B,YAAYT;uBAIvC,oBAACmD;QACC/E,SAAS;QACT0E,OAAO;YACLC,WAAWV;YACXW,iBAAiBX;QACnB;OAECpE;AAKX,EAAE"}