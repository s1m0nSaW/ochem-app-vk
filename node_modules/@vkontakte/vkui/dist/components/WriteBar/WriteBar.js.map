{"version":3,"sources":["../../../src/components/WriteBar/WriteBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { HasRef, HasRootRef } from '../../types';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Title } from '../Typography/Title/Title';\nimport { TypographyProps } from '../Typography/Typography';\nimport styles from './WriteBar.module.css';\n\nexport interface WriteBarProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLTextAreaElement> {\n  /**\n   * Содержимое, отображаемое слева от поля ввода.\n   */\n  before?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое поверх поля ввода (актуально для iOS)\n   */\n  inlineAfter?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое справа от поля ввода\n   */\n  after?: React.ReactNode;\n  /**\n   * Вызывается при смене высоты поля ввода\n   */\n  onHeightChange?: VoidFunction;\n  /**\n   * Добавляет тень вокруг поля ввода\n   */\n  shadow?: boolean;\n\n  children?: never;\n}\n\nconst WriteBarTypography = (props: TypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === 'ios') {\n    return <Title {...props} level=\"3\" weight=\"3\" />;\n  }\n\n  return <Headline {...props} />;\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/WriteBar\n */\nexport const WriteBar = ({\n  className,\n  style,\n  before,\n  inlineAfter,\n  after,\n  getRootRef,\n  getRef,\n  onHeightChange,\n  shadow = false,\n  defaultValue,\n  ...restProps\n}: WriteBarProps) => {\n  const platform = usePlatform();\n\n  const [value, onChange] = useEnsuredControl({\n    defaultValue,\n    ...restProps,\n  });\n\n  const textareaRef = useExternRef(getRef);\n  const currentScrollHeight = React.useRef<number>();\n\n  const resize = React.useCallback(() => {\n    const textareaEl = textareaRef.current;\n    if (!textareaEl) {\n      return;\n    }\n\n    if (textareaEl.offsetParent) {\n      textareaEl.style.height = '';\n      textareaEl.style.height = `${textareaEl.scrollHeight}px`;\n\n      if (textareaEl.scrollHeight !== currentScrollHeight.current && onHeightChange) {\n        onHeightChange();\n        currentScrollHeight.current = textareaEl.scrollHeight;\n      }\n    }\n  }, [onHeightChange, textareaRef]);\n\n  React.useEffect(resize, [resize, value, platform]);\n\n  return (\n    <div\n      ref={getRootRef}\n      className={classNames(\n        styles['WriteBar'],\n        platform === 'ios' && styles['WriteBar--ios'],\n        shadow && styles['WriteBar--shadow'],\n        className,\n      )}\n      style={style}\n    >\n      <div className={styles['WriteBar__form']}>\n        {hasReactNode(before) && <div className={styles['WriteBar__before']}>{before}</div>}\n\n        <div className={styles['WriteBar__formIn']}>\n          <WriteBarTypography\n            {...restProps}\n            Component=\"textarea\"\n            className={styles['WriteBar__textarea']}\n            onChange={onChange}\n            getRootRef={textareaRef}\n            value={value}\n          />\n          {hasReactNode(inlineAfter) && (\n            <div className={styles['WriteBar__inlineAfter']}>{inlineAfter}</div>\n          )}\n        </div>\n\n        {hasReactNode(after) && <div className={styles['WriteBar__after']}>{after}</div>}\n      </div>\n    </div>\n  );\n};\n"],"names":["React","classNames","hasReactNode","useEnsuredControl","useExternRef","usePlatform","Headline","Title","WriteBarTypography","props","platform","level","weight","WriteBar","className","style","before","inlineAfter","after","getRootRef","getRef","onHeightChange","shadow","defaultValue","restProps","value","onChange","textareaRef","currentScrollHeight","useRef","resize","useCallback","textareaEl","current","offsetParent","height","scrollHeight","useEffect","div","ref","Component"],"mappings":";;;AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,EAAEC,YAAY,QAAQ,kBAAkB;AAC3D,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,KAAK,QAAQ,4BAA4B;AAgClD,MAAMC,qBAAqB,CAACC;IAC1B,MAAMC,WAAWL;IAEjB,IAAIK,aAAa,OAAO;QACtB,qBAAO,oBAACH,+CAAUE;YAAOE,OAAM;YAAIC,QAAO;;IAC5C;IAEA,qBAAO,oBAACN,UAAaG;AACvB;AAEA;;CAEC,GACD,OAAO,MAAMI,WAAW;QAAC,EACvBC,SAAS,EACTC,KAAK,EACLC,MAAM,EACNC,WAAW,EACXC,KAAK,EACLC,UAAU,EACVC,MAAM,EACNC,cAAc,EACdC,SAAS,KAAK,EACdC,YAAY,EAEE,WADXC;QAVHV;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAMb,WAAWL;IAEjB,MAAM,CAACoB,OAAOC,SAAS,GAAGvB,kBAAkB;QAC1CoB;OACGC;IAGL,MAAMG,cAAcvB,aAAagB;IACjC,MAAMQ,sBAAsB5B,MAAM6B,MAAM;IAExC,MAAMC,SAAS9B,MAAM+B,WAAW,CAAC;QAC/B,MAAMC,aAAaL,YAAYM,OAAO;QACtC,IAAI,CAACD,YAAY;YACf;QACF;QAEA,IAAIA,WAAWE,YAAY,EAAE;YAC3BF,WAAWjB,KAAK,CAACoB,MAAM,GAAG;YAC1BH,WAAWjB,KAAK,CAACoB,MAAM,GAAG,CAAC,EAAEH,WAAWI,YAAY,CAAC,EAAE,CAAC;YAExD,IAAIJ,WAAWI,YAAY,KAAKR,oBAAoBK,OAAO,IAAIZ,gBAAgB;gBAC7EA;gBACAO,oBAAoBK,OAAO,GAAGD,WAAWI,YAAY;YACvD;QACF;IACF,GAAG;QAACf;QAAgBM;KAAY;IAEhC3B,MAAMqC,SAAS,CAACP,QAAQ;QAACA;QAAQL;QAAOf;KAAS;IAEjD,qBACE,oBAAC4B;QACCC,KAAKpB;QACLL,WAAWb,2BAETS,aAAa,8BACbY,kCACAR;QAEFC,OAAOA;qBAEP,oBAACuB;QAAIxB,SAAS;OACXZ,aAAac,yBAAW,oBAACsB;QAAIxB,SAAS;OAA+BE,uBAEtE,oBAACsB;QAAIxB,SAAS;qBACZ,oBAACN,4DACKgB;QACJgB,WAAU;QACV1B,SAAS;QACTY,UAAUA;QACVP,YAAYQ;QACZF,OAAOA;SAERvB,aAAae,8BACZ,oBAACqB;QAAIxB,SAAS;OAAoCG,eAIrDf,aAAagB,wBAAU,oBAACoB;QAAIxB,SAAS;OAA8BI;AAI5E,EAAE"}